//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LAB6_CONSOLE_CLIENT.MyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/LAB6_SERVICE.model")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArrivalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArrivalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableTicketsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartureAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartureTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArrivalAddress {
            get {
                return this.ArrivalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivalAddressField, value) != true)) {
                    this.ArrivalAddressField = value;
                    this.RaisePropertyChanged("ArrivalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArrivalTime {
            get {
                return this.ArrivalTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivalTimeField, value) != true)) {
                    this.ArrivalTimeField = value;
                    this.RaisePropertyChanged("ArrivalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableTicketsCount {
            get {
                return this.AvailableTicketsCountField;
            }
            set {
                if ((this.AvailableTicketsCountField.Equals(value) != true)) {
                    this.AvailableTicketsCountField = value;
                    this.RaisePropertyChanged("AvailableTicketsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartureAddress {
            get {
                return this.DepartureAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartureAddressField, value) != true)) {
                    this.DepartureAddressField = value;
                    this.RaisePropertyChanged("DepartureAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartureTime {
            get {
                return this.DepartureTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartureTimeField, value) != true)) {
                    this.DepartureTimeField = value;
                    this.RaisePropertyChanged("DepartureTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/LAB6_SERVICE.model")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIO {
            get {
                return this.FIOField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                    this.FIOField = value;
                    this.RaisePropertyChanged("FIO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/LAB6_SERVICE.model")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LAB6_CONSOLE_CLIENT.MyService.Flight FlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LAB6_CONSOLE_CLIENT.MyService.Person PersonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LAB6_CONSOLE_CLIENT.MyService.Flight Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LAB6_CONSOLE_CLIENT.MyService.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IFlightsServise")]
    public interface IFlightsServise {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getAllFlights", ReplyAction="http://tempuri.org/IFlightsServise/getAllFlightsResponse")]
        LAB6_CONSOLE_CLIENT.MyService.Flight[] getAllFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getAllFlights", ReplyAction="http://tempuri.org/IFlightsServise/getAllFlightsResponse")]
        System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight[]> getAllFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/addFlight", ReplyAction="http://tempuri.org/IFlightsServise/addFlightResponse")]
        void addFlight(LAB6_CONSOLE_CLIENT.MyService.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/addFlight", ReplyAction="http://tempuri.org/IFlightsServise/addFlightResponse")]
        System.Threading.Tasks.Task addFlightAsync(LAB6_CONSOLE_CLIENT.MyService.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getFreeFlight", ReplyAction="http://tempuri.org/IFlightsServise/getFreeFlightResponse")]
        LAB6_CONSOLE_CLIENT.MyService.Flight getFreeFlight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getFreeFlight", ReplyAction="http://tempuri.org/IFlightsServise/getFreeFlightResponse")]
        System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight> getFreeFlightAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getFlightAt", ReplyAction="http://tempuri.org/IFlightsServise/getFlightAtResponse")]
        LAB6_CONSOLE_CLIENT.MyService.Flight getFlightAt(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/getFlightAt", ReplyAction="http://tempuri.org/IFlightsServise/getFlightAtResponse")]
        System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight> getFlightAtAsync(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/buyTicket", ReplyAction="http://tempuri.org/IFlightsServise/buyTicketResponse")]
        LAB6_CONSOLE_CLIENT.MyService.Ticket buyTicket(LAB6_CONSOLE_CLIENT.MyService.Person person, string arrivalAddress, string departureAddress, string departureTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightsServise/buyTicket", ReplyAction="http://tempuri.org/IFlightsServise/buyTicketResponse")]
        System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Ticket> buyTicketAsync(LAB6_CONSOLE_CLIENT.MyService.Person person, string arrivalAddress, string departureAddress, string departureTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightsServiseChannel : LAB6_CONSOLE_CLIENT.MyService.IFlightsServise, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightsServiseClient : System.ServiceModel.ClientBase<LAB6_CONSOLE_CLIENT.MyService.IFlightsServise>, LAB6_CONSOLE_CLIENT.MyService.IFlightsServise {
        
        public FlightsServiseClient() {
        }
        
        public FlightsServiseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightsServiseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightsServiseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightsServiseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LAB6_CONSOLE_CLIENT.MyService.Flight[] getAllFlights() {
            return base.Channel.getAllFlights();
        }
        
        public System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight[]> getAllFlightsAsync() {
            return base.Channel.getAllFlightsAsync();
        }
        
        public void addFlight(LAB6_CONSOLE_CLIENT.MyService.Flight flight) {
            base.Channel.addFlight(flight);
        }
        
        public System.Threading.Tasks.Task addFlightAsync(LAB6_CONSOLE_CLIENT.MyService.Flight flight) {
            return base.Channel.addFlightAsync(flight);
        }
        
        public LAB6_CONSOLE_CLIENT.MyService.Flight getFreeFlight() {
            return base.Channel.getFreeFlight();
        }
        
        public System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight> getFreeFlightAsync() {
            return base.Channel.getFreeFlightAsync();
        }
        
        public LAB6_CONSOLE_CLIENT.MyService.Flight getFlightAt(int index) {
            return base.Channel.getFlightAt(index);
        }
        
        public System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Flight> getFlightAtAsync(int index) {
            return base.Channel.getFlightAtAsync(index);
        }
        
        public LAB6_CONSOLE_CLIENT.MyService.Ticket buyTicket(LAB6_CONSOLE_CLIENT.MyService.Person person, string arrivalAddress, string departureAddress, string departureTime) {
            return base.Channel.buyTicket(person, arrivalAddress, departureAddress, departureTime);
        }
        
        public System.Threading.Tasks.Task<LAB6_CONSOLE_CLIENT.MyService.Ticket> buyTicketAsync(LAB6_CONSOLE_CLIENT.MyService.Person person, string arrivalAddress, string departureAddress, string departureTime) {
            return base.Channel.buyTicketAsync(person, arrivalAddress, departureAddress, departureTime);
        }
    }
}
